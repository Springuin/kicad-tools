#!/usr/bin/python
"""
When you copy-and-paste a hierarhical sheet, references of contents of the sheet is
erroneously duplicated too, which causes error when re-annotation is needed.

This tool replaces duplicate reference numbers with "?" string, thus allowing
annotation tool to re-annotate the copied sheets.
"""

import sys, re
import argparse


if len(sys.argv) > 1:
    project_name = sys.argv[1]
else:
    print "Project name is missing."
    exit()


write_to_file = False
if len(sys.argv) > 2 and sys.argv[2] == "--write":
    print "*** Writing to file..."
    write_to_file = True

if write_to_file:
    ans = raw_input("Did you close the Schematic Editor? [y/n] ")
    if ans != "y":
        print "Schematic Editor should be closed before running this."
        exit()

import glob, os
#os.chdir("/mydir")

for filename in glob.glob("*.sch"):
    if filename.startswith('_'):
        continue
    print "--- Examining {0}".format(filename)
    with open(filename, 'r+b') as f:
        lines = []
        widlist = []
        pattern = re.compile('(^AR Path="/)([A-Z0-9/]+)(" .*)')
        for line in f:
            ref = pattern.search(line)
            if ref:
                path = ref.group(2)
                #print "detected reference: ", path
                paths = path.split('/')
                instance_found = False
                with open(project_name + '.sch', 'r') as p:
                    for pline in p:
                        # search for this path in project schema
                        if pline == "U {0}\n".format(paths[0]):
                            #print "Found this component in project schema: ", paths[0]
                            instance_found = True
                if instance_found:
                    lines.append(line)
                else:
                    sys.stdout.write("This instance is not found: " + line)
            else:
                # some other line, just append
                lines.append(line)

        new_content = ''.join(lines)

        if write_to_file:
            f.seek(0)
            f.write(new_content)
            f.truncate()

if not write_to_file:
    print "**** This was a dry run, use with '--write' parameter to write to the file."
